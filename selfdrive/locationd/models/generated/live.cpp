#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6794182699788045524) {
   out_6794182699788045524[0] = 0;
   out_6794182699788045524[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6794182699788045524[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6794182699788045524[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6794182699788045524[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6794182699788045524[5] = -sin(in_vec[1]);
   out_6794182699788045524[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6794182699788045524[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6794182699788045524[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6794182699788045524[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6794182699788045524[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6794182699788045524[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6794182699788045524[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6794182699788045524[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6794182699788045524[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6794182699788045524[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6794182699788045524[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6794182699788045524[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2083680679542908203) {
   out_2083680679542908203[0] = delta_x[0] + nom_x[0];
   out_2083680679542908203[1] = delta_x[1] + nom_x[1];
   out_2083680679542908203[2] = delta_x[2] + nom_x[2];
   out_2083680679542908203[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2083680679542908203[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2083680679542908203[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2083680679542908203[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2083680679542908203[7] = delta_x[6] + nom_x[7];
   out_2083680679542908203[8] = delta_x[7] + nom_x[8];
   out_2083680679542908203[9] = delta_x[8] + nom_x[9];
   out_2083680679542908203[10] = delta_x[9] + nom_x[10];
   out_2083680679542908203[11] = delta_x[10] + nom_x[11];
   out_2083680679542908203[12] = delta_x[11] + nom_x[12];
   out_2083680679542908203[13] = delta_x[12] + nom_x[13];
   out_2083680679542908203[14] = delta_x[13] + nom_x[14];
   out_2083680679542908203[15] = delta_x[14] + nom_x[15];
   out_2083680679542908203[16] = delta_x[15] + nom_x[16];
   out_2083680679542908203[17] = delta_x[16] + nom_x[17];
   out_2083680679542908203[18] = delta_x[17] + nom_x[18];
   out_2083680679542908203[19] = delta_x[18] + nom_x[19];
   out_2083680679542908203[20] = delta_x[19] + nom_x[20];
   out_2083680679542908203[21] = delta_x[20] + nom_x[21];
   out_2083680679542908203[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3694715790776780070) {
   out_3694715790776780070[0] = -nom_x[0] + true_x[0];
   out_3694715790776780070[1] = -nom_x[1] + true_x[1];
   out_3694715790776780070[2] = -nom_x[2] + true_x[2];
   out_3694715790776780070[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3694715790776780070[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3694715790776780070[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3694715790776780070[6] = -nom_x[7] + true_x[7];
   out_3694715790776780070[7] = -nom_x[8] + true_x[8];
   out_3694715790776780070[8] = -nom_x[9] + true_x[9];
   out_3694715790776780070[9] = -nom_x[10] + true_x[10];
   out_3694715790776780070[10] = -nom_x[11] + true_x[11];
   out_3694715790776780070[11] = -nom_x[12] + true_x[12];
   out_3694715790776780070[12] = -nom_x[13] + true_x[13];
   out_3694715790776780070[13] = -nom_x[14] + true_x[14];
   out_3694715790776780070[14] = -nom_x[15] + true_x[15];
   out_3694715790776780070[15] = -nom_x[16] + true_x[16];
   out_3694715790776780070[16] = -nom_x[17] + true_x[17];
   out_3694715790776780070[17] = -nom_x[18] + true_x[18];
   out_3694715790776780070[18] = -nom_x[19] + true_x[19];
   out_3694715790776780070[19] = -nom_x[20] + true_x[20];
   out_3694715790776780070[20] = -nom_x[21] + true_x[21];
   out_3694715790776780070[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_8113539636200269585) {
   out_8113539636200269585[0] = 1.0;
   out_8113539636200269585[1] = 0.0;
   out_8113539636200269585[2] = 0.0;
   out_8113539636200269585[3] = 0.0;
   out_8113539636200269585[4] = 0.0;
   out_8113539636200269585[5] = 0.0;
   out_8113539636200269585[6] = 0.0;
   out_8113539636200269585[7] = 0.0;
   out_8113539636200269585[8] = 0.0;
   out_8113539636200269585[9] = 0.0;
   out_8113539636200269585[10] = 0.0;
   out_8113539636200269585[11] = 0.0;
   out_8113539636200269585[12] = 0.0;
   out_8113539636200269585[13] = 0.0;
   out_8113539636200269585[14] = 0.0;
   out_8113539636200269585[15] = 0.0;
   out_8113539636200269585[16] = 0.0;
   out_8113539636200269585[17] = 0.0;
   out_8113539636200269585[18] = 0.0;
   out_8113539636200269585[19] = 0.0;
   out_8113539636200269585[20] = 0.0;
   out_8113539636200269585[21] = 0.0;
   out_8113539636200269585[22] = 0.0;
   out_8113539636200269585[23] = 1.0;
   out_8113539636200269585[24] = 0.0;
   out_8113539636200269585[25] = 0.0;
   out_8113539636200269585[26] = 0.0;
   out_8113539636200269585[27] = 0.0;
   out_8113539636200269585[28] = 0.0;
   out_8113539636200269585[29] = 0.0;
   out_8113539636200269585[30] = 0.0;
   out_8113539636200269585[31] = 0.0;
   out_8113539636200269585[32] = 0.0;
   out_8113539636200269585[33] = 0.0;
   out_8113539636200269585[34] = 0.0;
   out_8113539636200269585[35] = 0.0;
   out_8113539636200269585[36] = 0.0;
   out_8113539636200269585[37] = 0.0;
   out_8113539636200269585[38] = 0.0;
   out_8113539636200269585[39] = 0.0;
   out_8113539636200269585[40] = 0.0;
   out_8113539636200269585[41] = 0.0;
   out_8113539636200269585[42] = 0.0;
   out_8113539636200269585[43] = 0.0;
   out_8113539636200269585[44] = 0.0;
   out_8113539636200269585[45] = 0.0;
   out_8113539636200269585[46] = 1.0;
   out_8113539636200269585[47] = 0.0;
   out_8113539636200269585[48] = 0.0;
   out_8113539636200269585[49] = 0.0;
   out_8113539636200269585[50] = 0.0;
   out_8113539636200269585[51] = 0.0;
   out_8113539636200269585[52] = 0.0;
   out_8113539636200269585[53] = 0.0;
   out_8113539636200269585[54] = 0.0;
   out_8113539636200269585[55] = 0.0;
   out_8113539636200269585[56] = 0.0;
   out_8113539636200269585[57] = 0.0;
   out_8113539636200269585[58] = 0.0;
   out_8113539636200269585[59] = 0.0;
   out_8113539636200269585[60] = 0.0;
   out_8113539636200269585[61] = 0.0;
   out_8113539636200269585[62] = 0.0;
   out_8113539636200269585[63] = 0.0;
   out_8113539636200269585[64] = 0.0;
   out_8113539636200269585[65] = 0.0;
   out_8113539636200269585[66] = 0.0;
   out_8113539636200269585[67] = 0.0;
   out_8113539636200269585[68] = 0.0;
   out_8113539636200269585[69] = -0.5*state[4];
   out_8113539636200269585[70] = -0.5*state[5];
   out_8113539636200269585[71] = -0.5*state[6];
   out_8113539636200269585[72] = 0.0;
   out_8113539636200269585[73] = 0.0;
   out_8113539636200269585[74] = 0.0;
   out_8113539636200269585[75] = 0.0;
   out_8113539636200269585[76] = 0.0;
   out_8113539636200269585[77] = 0.0;
   out_8113539636200269585[78] = 0.0;
   out_8113539636200269585[79] = 0.0;
   out_8113539636200269585[80] = 0.0;
   out_8113539636200269585[81] = 0.0;
   out_8113539636200269585[82] = 0.0;
   out_8113539636200269585[83] = 0.0;
   out_8113539636200269585[84] = 0.0;
   out_8113539636200269585[85] = 0.0;
   out_8113539636200269585[86] = 0.0;
   out_8113539636200269585[87] = 0.0;
   out_8113539636200269585[88] = 0.0;
   out_8113539636200269585[89] = 0.0;
   out_8113539636200269585[90] = 0.0;
   out_8113539636200269585[91] = 0.5*state[3];
   out_8113539636200269585[92] = 0.5*state[6];
   out_8113539636200269585[93] = -0.5*state[5];
   out_8113539636200269585[94] = 0.0;
   out_8113539636200269585[95] = 0.0;
   out_8113539636200269585[96] = 0.0;
   out_8113539636200269585[97] = 0.0;
   out_8113539636200269585[98] = 0.0;
   out_8113539636200269585[99] = 0.0;
   out_8113539636200269585[100] = 0.0;
   out_8113539636200269585[101] = 0.0;
   out_8113539636200269585[102] = 0.0;
   out_8113539636200269585[103] = 0.0;
   out_8113539636200269585[104] = 0.0;
   out_8113539636200269585[105] = 0.0;
   out_8113539636200269585[106] = 0.0;
   out_8113539636200269585[107] = 0.0;
   out_8113539636200269585[108] = 0.0;
   out_8113539636200269585[109] = 0.0;
   out_8113539636200269585[110] = 0.0;
   out_8113539636200269585[111] = 0.0;
   out_8113539636200269585[112] = 0.0;
   out_8113539636200269585[113] = -0.5*state[6];
   out_8113539636200269585[114] = 0.5*state[3];
   out_8113539636200269585[115] = 0.5*state[4];
   out_8113539636200269585[116] = 0.0;
   out_8113539636200269585[117] = 0.0;
   out_8113539636200269585[118] = 0.0;
   out_8113539636200269585[119] = 0.0;
   out_8113539636200269585[120] = 0.0;
   out_8113539636200269585[121] = 0.0;
   out_8113539636200269585[122] = 0.0;
   out_8113539636200269585[123] = 0.0;
   out_8113539636200269585[124] = 0.0;
   out_8113539636200269585[125] = 0.0;
   out_8113539636200269585[126] = 0.0;
   out_8113539636200269585[127] = 0.0;
   out_8113539636200269585[128] = 0.0;
   out_8113539636200269585[129] = 0.0;
   out_8113539636200269585[130] = 0.0;
   out_8113539636200269585[131] = 0.0;
   out_8113539636200269585[132] = 0.0;
   out_8113539636200269585[133] = 0.0;
   out_8113539636200269585[134] = 0.0;
   out_8113539636200269585[135] = 0.5*state[5];
   out_8113539636200269585[136] = -0.5*state[4];
   out_8113539636200269585[137] = 0.5*state[3];
   out_8113539636200269585[138] = 0.0;
   out_8113539636200269585[139] = 0.0;
   out_8113539636200269585[140] = 0.0;
   out_8113539636200269585[141] = 0.0;
   out_8113539636200269585[142] = 0.0;
   out_8113539636200269585[143] = 0.0;
   out_8113539636200269585[144] = 0.0;
   out_8113539636200269585[145] = 0.0;
   out_8113539636200269585[146] = 0.0;
   out_8113539636200269585[147] = 0.0;
   out_8113539636200269585[148] = 0.0;
   out_8113539636200269585[149] = 0.0;
   out_8113539636200269585[150] = 0.0;
   out_8113539636200269585[151] = 0.0;
   out_8113539636200269585[152] = 0.0;
   out_8113539636200269585[153] = 0.0;
   out_8113539636200269585[154] = 0.0;
   out_8113539636200269585[155] = 0.0;
   out_8113539636200269585[156] = 0.0;
   out_8113539636200269585[157] = 0.0;
   out_8113539636200269585[158] = 0.0;
   out_8113539636200269585[159] = 0.0;
   out_8113539636200269585[160] = 1.0;
   out_8113539636200269585[161] = 0.0;
   out_8113539636200269585[162] = 0.0;
   out_8113539636200269585[163] = 0.0;
   out_8113539636200269585[164] = 0.0;
   out_8113539636200269585[165] = 0.0;
   out_8113539636200269585[166] = 0.0;
   out_8113539636200269585[167] = 0.0;
   out_8113539636200269585[168] = 0.0;
   out_8113539636200269585[169] = 0.0;
   out_8113539636200269585[170] = 0.0;
   out_8113539636200269585[171] = 0.0;
   out_8113539636200269585[172] = 0.0;
   out_8113539636200269585[173] = 0.0;
   out_8113539636200269585[174] = 0.0;
   out_8113539636200269585[175] = 0.0;
   out_8113539636200269585[176] = 0.0;
   out_8113539636200269585[177] = 0.0;
   out_8113539636200269585[178] = 0.0;
   out_8113539636200269585[179] = 0.0;
   out_8113539636200269585[180] = 0.0;
   out_8113539636200269585[181] = 0.0;
   out_8113539636200269585[182] = 0.0;
   out_8113539636200269585[183] = 1.0;
   out_8113539636200269585[184] = 0.0;
   out_8113539636200269585[185] = 0.0;
   out_8113539636200269585[186] = 0.0;
   out_8113539636200269585[187] = 0.0;
   out_8113539636200269585[188] = 0.0;
   out_8113539636200269585[189] = 0.0;
   out_8113539636200269585[190] = 0.0;
   out_8113539636200269585[191] = 0.0;
   out_8113539636200269585[192] = 0.0;
   out_8113539636200269585[193] = 0.0;
   out_8113539636200269585[194] = 0.0;
   out_8113539636200269585[195] = 0.0;
   out_8113539636200269585[196] = 0.0;
   out_8113539636200269585[197] = 0.0;
   out_8113539636200269585[198] = 0.0;
   out_8113539636200269585[199] = 0.0;
   out_8113539636200269585[200] = 0.0;
   out_8113539636200269585[201] = 0.0;
   out_8113539636200269585[202] = 0.0;
   out_8113539636200269585[203] = 0.0;
   out_8113539636200269585[204] = 0.0;
   out_8113539636200269585[205] = 0.0;
   out_8113539636200269585[206] = 1.0;
   out_8113539636200269585[207] = 0.0;
   out_8113539636200269585[208] = 0.0;
   out_8113539636200269585[209] = 0.0;
   out_8113539636200269585[210] = 0.0;
   out_8113539636200269585[211] = 0.0;
   out_8113539636200269585[212] = 0.0;
   out_8113539636200269585[213] = 0.0;
   out_8113539636200269585[214] = 0.0;
   out_8113539636200269585[215] = 0.0;
   out_8113539636200269585[216] = 0.0;
   out_8113539636200269585[217] = 0.0;
   out_8113539636200269585[218] = 0.0;
   out_8113539636200269585[219] = 0.0;
   out_8113539636200269585[220] = 0.0;
   out_8113539636200269585[221] = 0.0;
   out_8113539636200269585[222] = 0.0;
   out_8113539636200269585[223] = 0.0;
   out_8113539636200269585[224] = 0.0;
   out_8113539636200269585[225] = 0.0;
   out_8113539636200269585[226] = 0.0;
   out_8113539636200269585[227] = 0.0;
   out_8113539636200269585[228] = 0.0;
   out_8113539636200269585[229] = 1.0;
   out_8113539636200269585[230] = 0.0;
   out_8113539636200269585[231] = 0.0;
   out_8113539636200269585[232] = 0.0;
   out_8113539636200269585[233] = 0.0;
   out_8113539636200269585[234] = 0.0;
   out_8113539636200269585[235] = 0.0;
   out_8113539636200269585[236] = 0.0;
   out_8113539636200269585[237] = 0.0;
   out_8113539636200269585[238] = 0.0;
   out_8113539636200269585[239] = 0.0;
   out_8113539636200269585[240] = 0.0;
   out_8113539636200269585[241] = 0.0;
   out_8113539636200269585[242] = 0.0;
   out_8113539636200269585[243] = 0.0;
   out_8113539636200269585[244] = 0.0;
   out_8113539636200269585[245] = 0.0;
   out_8113539636200269585[246] = 0.0;
   out_8113539636200269585[247] = 0.0;
   out_8113539636200269585[248] = 0.0;
   out_8113539636200269585[249] = 0.0;
   out_8113539636200269585[250] = 0.0;
   out_8113539636200269585[251] = 0.0;
   out_8113539636200269585[252] = 1.0;
   out_8113539636200269585[253] = 0.0;
   out_8113539636200269585[254] = 0.0;
   out_8113539636200269585[255] = 0.0;
   out_8113539636200269585[256] = 0.0;
   out_8113539636200269585[257] = 0.0;
   out_8113539636200269585[258] = 0.0;
   out_8113539636200269585[259] = 0.0;
   out_8113539636200269585[260] = 0.0;
   out_8113539636200269585[261] = 0.0;
   out_8113539636200269585[262] = 0.0;
   out_8113539636200269585[263] = 0.0;
   out_8113539636200269585[264] = 0.0;
   out_8113539636200269585[265] = 0.0;
   out_8113539636200269585[266] = 0.0;
   out_8113539636200269585[267] = 0.0;
   out_8113539636200269585[268] = 0.0;
   out_8113539636200269585[269] = 0.0;
   out_8113539636200269585[270] = 0.0;
   out_8113539636200269585[271] = 0.0;
   out_8113539636200269585[272] = 0.0;
   out_8113539636200269585[273] = 0.0;
   out_8113539636200269585[274] = 0.0;
   out_8113539636200269585[275] = 1.0;
   out_8113539636200269585[276] = 0.0;
   out_8113539636200269585[277] = 0.0;
   out_8113539636200269585[278] = 0.0;
   out_8113539636200269585[279] = 0.0;
   out_8113539636200269585[280] = 0.0;
   out_8113539636200269585[281] = 0.0;
   out_8113539636200269585[282] = 0.0;
   out_8113539636200269585[283] = 0.0;
   out_8113539636200269585[284] = 0.0;
   out_8113539636200269585[285] = 0.0;
   out_8113539636200269585[286] = 0.0;
   out_8113539636200269585[287] = 0.0;
   out_8113539636200269585[288] = 0.0;
   out_8113539636200269585[289] = 0.0;
   out_8113539636200269585[290] = 0.0;
   out_8113539636200269585[291] = 0.0;
   out_8113539636200269585[292] = 0.0;
   out_8113539636200269585[293] = 0.0;
   out_8113539636200269585[294] = 0.0;
   out_8113539636200269585[295] = 0.0;
   out_8113539636200269585[296] = 0.0;
   out_8113539636200269585[297] = 0.0;
   out_8113539636200269585[298] = 1.0;
   out_8113539636200269585[299] = 0.0;
   out_8113539636200269585[300] = 0.0;
   out_8113539636200269585[301] = 0.0;
   out_8113539636200269585[302] = 0.0;
   out_8113539636200269585[303] = 0.0;
   out_8113539636200269585[304] = 0.0;
   out_8113539636200269585[305] = 0.0;
   out_8113539636200269585[306] = 0.0;
   out_8113539636200269585[307] = 0.0;
   out_8113539636200269585[308] = 0.0;
   out_8113539636200269585[309] = 0.0;
   out_8113539636200269585[310] = 0.0;
   out_8113539636200269585[311] = 0.0;
   out_8113539636200269585[312] = 0.0;
   out_8113539636200269585[313] = 0.0;
   out_8113539636200269585[314] = 0.0;
   out_8113539636200269585[315] = 0.0;
   out_8113539636200269585[316] = 0.0;
   out_8113539636200269585[317] = 0.0;
   out_8113539636200269585[318] = 0.0;
   out_8113539636200269585[319] = 0.0;
   out_8113539636200269585[320] = 0.0;
   out_8113539636200269585[321] = 1.0;
   out_8113539636200269585[322] = 0.0;
   out_8113539636200269585[323] = 0.0;
   out_8113539636200269585[324] = 0.0;
   out_8113539636200269585[325] = 0.0;
   out_8113539636200269585[326] = 0.0;
   out_8113539636200269585[327] = 0.0;
   out_8113539636200269585[328] = 0.0;
   out_8113539636200269585[329] = 0.0;
   out_8113539636200269585[330] = 0.0;
   out_8113539636200269585[331] = 0.0;
   out_8113539636200269585[332] = 0.0;
   out_8113539636200269585[333] = 0.0;
   out_8113539636200269585[334] = 0.0;
   out_8113539636200269585[335] = 0.0;
   out_8113539636200269585[336] = 0.0;
   out_8113539636200269585[337] = 0.0;
   out_8113539636200269585[338] = 0.0;
   out_8113539636200269585[339] = 0.0;
   out_8113539636200269585[340] = 0.0;
   out_8113539636200269585[341] = 0.0;
   out_8113539636200269585[342] = 0.0;
   out_8113539636200269585[343] = 0.0;
   out_8113539636200269585[344] = 1.0;
   out_8113539636200269585[345] = 0.0;
   out_8113539636200269585[346] = 0.0;
   out_8113539636200269585[347] = 0.0;
   out_8113539636200269585[348] = 0.0;
   out_8113539636200269585[349] = 0.0;
   out_8113539636200269585[350] = 0.0;
   out_8113539636200269585[351] = 0.0;
   out_8113539636200269585[352] = 0.0;
   out_8113539636200269585[353] = 0.0;
   out_8113539636200269585[354] = 0.0;
   out_8113539636200269585[355] = 0.0;
   out_8113539636200269585[356] = 0.0;
   out_8113539636200269585[357] = 0.0;
   out_8113539636200269585[358] = 0.0;
   out_8113539636200269585[359] = 0.0;
   out_8113539636200269585[360] = 0.0;
   out_8113539636200269585[361] = 0.0;
   out_8113539636200269585[362] = 0.0;
   out_8113539636200269585[363] = 0.0;
   out_8113539636200269585[364] = 0.0;
   out_8113539636200269585[365] = 0.0;
   out_8113539636200269585[366] = 0.0;
   out_8113539636200269585[367] = 1.0;
   out_8113539636200269585[368] = 0.0;
   out_8113539636200269585[369] = 0.0;
   out_8113539636200269585[370] = 0.0;
   out_8113539636200269585[371] = 0.0;
   out_8113539636200269585[372] = 0.0;
   out_8113539636200269585[373] = 0.0;
   out_8113539636200269585[374] = 0.0;
   out_8113539636200269585[375] = 0.0;
   out_8113539636200269585[376] = 0.0;
   out_8113539636200269585[377] = 0.0;
   out_8113539636200269585[378] = 0.0;
   out_8113539636200269585[379] = 0.0;
   out_8113539636200269585[380] = 0.0;
   out_8113539636200269585[381] = 0.0;
   out_8113539636200269585[382] = 0.0;
   out_8113539636200269585[383] = 0.0;
   out_8113539636200269585[384] = 0.0;
   out_8113539636200269585[385] = 0.0;
   out_8113539636200269585[386] = 0.0;
   out_8113539636200269585[387] = 0.0;
   out_8113539636200269585[388] = 0.0;
   out_8113539636200269585[389] = 0.0;
   out_8113539636200269585[390] = 1.0;
   out_8113539636200269585[391] = 0.0;
   out_8113539636200269585[392] = 0.0;
   out_8113539636200269585[393] = 0.0;
   out_8113539636200269585[394] = 0.0;
   out_8113539636200269585[395] = 0.0;
   out_8113539636200269585[396] = 0.0;
   out_8113539636200269585[397] = 0.0;
   out_8113539636200269585[398] = 0.0;
   out_8113539636200269585[399] = 0.0;
   out_8113539636200269585[400] = 0.0;
   out_8113539636200269585[401] = 0.0;
   out_8113539636200269585[402] = 0.0;
   out_8113539636200269585[403] = 0.0;
   out_8113539636200269585[404] = 0.0;
   out_8113539636200269585[405] = 0.0;
   out_8113539636200269585[406] = 0.0;
   out_8113539636200269585[407] = 0.0;
   out_8113539636200269585[408] = 0.0;
   out_8113539636200269585[409] = 0.0;
   out_8113539636200269585[410] = 0.0;
   out_8113539636200269585[411] = 0.0;
   out_8113539636200269585[412] = 0.0;
   out_8113539636200269585[413] = 1.0;
   out_8113539636200269585[414] = 0.0;
   out_8113539636200269585[415] = 0.0;
   out_8113539636200269585[416] = 0.0;
   out_8113539636200269585[417] = 0.0;
   out_8113539636200269585[418] = 0.0;
   out_8113539636200269585[419] = 0.0;
   out_8113539636200269585[420] = 0.0;
   out_8113539636200269585[421] = 0.0;
   out_8113539636200269585[422] = 0.0;
   out_8113539636200269585[423] = 0.0;
   out_8113539636200269585[424] = 0.0;
   out_8113539636200269585[425] = 0.0;
   out_8113539636200269585[426] = 0.0;
   out_8113539636200269585[427] = 0.0;
   out_8113539636200269585[428] = 0.0;
   out_8113539636200269585[429] = 0.0;
   out_8113539636200269585[430] = 0.0;
   out_8113539636200269585[431] = 0.0;
   out_8113539636200269585[432] = 0.0;
   out_8113539636200269585[433] = 0.0;
   out_8113539636200269585[434] = 0.0;
   out_8113539636200269585[435] = 0.0;
   out_8113539636200269585[436] = 1.0;
   out_8113539636200269585[437] = 0.0;
   out_8113539636200269585[438] = 0.0;
   out_8113539636200269585[439] = 0.0;
   out_8113539636200269585[440] = 0.0;
   out_8113539636200269585[441] = 0.0;
   out_8113539636200269585[442] = 0.0;
   out_8113539636200269585[443] = 0.0;
   out_8113539636200269585[444] = 0.0;
   out_8113539636200269585[445] = 0.0;
   out_8113539636200269585[446] = 0.0;
   out_8113539636200269585[447] = 0.0;
   out_8113539636200269585[448] = 0.0;
   out_8113539636200269585[449] = 0.0;
   out_8113539636200269585[450] = 0.0;
   out_8113539636200269585[451] = 0.0;
   out_8113539636200269585[452] = 0.0;
   out_8113539636200269585[453] = 0.0;
   out_8113539636200269585[454] = 0.0;
   out_8113539636200269585[455] = 0.0;
   out_8113539636200269585[456] = 0.0;
   out_8113539636200269585[457] = 0.0;
   out_8113539636200269585[458] = 0.0;
   out_8113539636200269585[459] = 1.0;
   out_8113539636200269585[460] = 0.0;
   out_8113539636200269585[461] = 0.0;
   out_8113539636200269585[462] = 0.0;
   out_8113539636200269585[463] = 0.0;
   out_8113539636200269585[464] = 0.0;
   out_8113539636200269585[465] = 0.0;
   out_8113539636200269585[466] = 0.0;
   out_8113539636200269585[467] = 0.0;
   out_8113539636200269585[468] = 0.0;
   out_8113539636200269585[469] = 0.0;
   out_8113539636200269585[470] = 0.0;
   out_8113539636200269585[471] = 0.0;
   out_8113539636200269585[472] = 0.0;
   out_8113539636200269585[473] = 0.0;
   out_8113539636200269585[474] = 0.0;
   out_8113539636200269585[475] = 0.0;
   out_8113539636200269585[476] = 0.0;
   out_8113539636200269585[477] = 0.0;
   out_8113539636200269585[478] = 0.0;
   out_8113539636200269585[479] = 0.0;
   out_8113539636200269585[480] = 0.0;
   out_8113539636200269585[481] = 0.0;
   out_8113539636200269585[482] = 1.0;
   out_8113539636200269585[483] = 0.0;
   out_8113539636200269585[484] = 0.0;
   out_8113539636200269585[485] = 0.0;
   out_8113539636200269585[486] = 0.0;
   out_8113539636200269585[487] = 0.0;
   out_8113539636200269585[488] = 0.0;
   out_8113539636200269585[489] = 0.0;
   out_8113539636200269585[490] = 0.0;
   out_8113539636200269585[491] = 0.0;
   out_8113539636200269585[492] = 0.0;
   out_8113539636200269585[493] = 0.0;
   out_8113539636200269585[494] = 0.0;
   out_8113539636200269585[495] = 0.0;
   out_8113539636200269585[496] = 0.0;
   out_8113539636200269585[497] = 0.0;
   out_8113539636200269585[498] = 0.0;
   out_8113539636200269585[499] = 0.0;
   out_8113539636200269585[500] = 0.0;
   out_8113539636200269585[501] = 0.0;
   out_8113539636200269585[502] = 0.0;
   out_8113539636200269585[503] = 0.0;
   out_8113539636200269585[504] = 0.0;
   out_8113539636200269585[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_7865903952507096390) {
   out_7865903952507096390[0] = dt*state[7] + state[0];
   out_7865903952507096390[1] = dt*state[8] + state[1];
   out_7865903952507096390[2] = dt*state[9] + state[2];
   out_7865903952507096390[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7865903952507096390[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7865903952507096390[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7865903952507096390[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7865903952507096390[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_7865903952507096390[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_7865903952507096390[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_7865903952507096390[10] = state[10];
   out_7865903952507096390[11] = state[11];
   out_7865903952507096390[12] = state[12];
   out_7865903952507096390[13] = state[13];
   out_7865903952507096390[14] = state[14];
   out_7865903952507096390[15] = state[15];
   out_7865903952507096390[16] = state[16];
   out_7865903952507096390[17] = state[17];
   out_7865903952507096390[18] = state[18];
   out_7865903952507096390[19] = state[19];
   out_7865903952507096390[20] = state[20];
   out_7865903952507096390[21] = state[21];
   out_7865903952507096390[22] = state[22];
}
void F_fun(double *state, double dt, double *out_3120221082551971936) {
   out_3120221082551971936[0] = 1;
   out_3120221082551971936[1] = 0;
   out_3120221082551971936[2] = 0;
   out_3120221082551971936[3] = 0;
   out_3120221082551971936[4] = 0;
   out_3120221082551971936[5] = 0;
   out_3120221082551971936[6] = dt;
   out_3120221082551971936[7] = 0;
   out_3120221082551971936[8] = 0;
   out_3120221082551971936[9] = 0;
   out_3120221082551971936[10] = 0;
   out_3120221082551971936[11] = 0;
   out_3120221082551971936[12] = 0;
   out_3120221082551971936[13] = 0;
   out_3120221082551971936[14] = 0;
   out_3120221082551971936[15] = 0;
   out_3120221082551971936[16] = 0;
   out_3120221082551971936[17] = 0;
   out_3120221082551971936[18] = 0;
   out_3120221082551971936[19] = 0;
   out_3120221082551971936[20] = 0;
   out_3120221082551971936[21] = 0;
   out_3120221082551971936[22] = 0;
   out_3120221082551971936[23] = 1;
   out_3120221082551971936[24] = 0;
   out_3120221082551971936[25] = 0;
   out_3120221082551971936[26] = 0;
   out_3120221082551971936[27] = 0;
   out_3120221082551971936[28] = 0;
   out_3120221082551971936[29] = dt;
   out_3120221082551971936[30] = 0;
   out_3120221082551971936[31] = 0;
   out_3120221082551971936[32] = 0;
   out_3120221082551971936[33] = 0;
   out_3120221082551971936[34] = 0;
   out_3120221082551971936[35] = 0;
   out_3120221082551971936[36] = 0;
   out_3120221082551971936[37] = 0;
   out_3120221082551971936[38] = 0;
   out_3120221082551971936[39] = 0;
   out_3120221082551971936[40] = 0;
   out_3120221082551971936[41] = 0;
   out_3120221082551971936[42] = 0;
   out_3120221082551971936[43] = 0;
   out_3120221082551971936[44] = 0;
   out_3120221082551971936[45] = 0;
   out_3120221082551971936[46] = 1;
   out_3120221082551971936[47] = 0;
   out_3120221082551971936[48] = 0;
   out_3120221082551971936[49] = 0;
   out_3120221082551971936[50] = 0;
   out_3120221082551971936[51] = 0;
   out_3120221082551971936[52] = dt;
   out_3120221082551971936[53] = 0;
   out_3120221082551971936[54] = 0;
   out_3120221082551971936[55] = 0;
   out_3120221082551971936[56] = 0;
   out_3120221082551971936[57] = 0;
   out_3120221082551971936[58] = 0;
   out_3120221082551971936[59] = 0;
   out_3120221082551971936[60] = 0;
   out_3120221082551971936[61] = 0;
   out_3120221082551971936[62] = 0;
   out_3120221082551971936[63] = 0;
   out_3120221082551971936[64] = 0;
   out_3120221082551971936[65] = 0;
   out_3120221082551971936[66] = 0;
   out_3120221082551971936[67] = 0;
   out_3120221082551971936[68] = 0;
   out_3120221082551971936[69] = 1;
   out_3120221082551971936[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3120221082551971936[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3120221082551971936[72] = 0;
   out_3120221082551971936[73] = 0;
   out_3120221082551971936[74] = 0;
   out_3120221082551971936[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3120221082551971936[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120221082551971936[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120221082551971936[78] = 0;
   out_3120221082551971936[79] = 0;
   out_3120221082551971936[80] = 0;
   out_3120221082551971936[81] = 0;
   out_3120221082551971936[82] = 0;
   out_3120221082551971936[83] = 0;
   out_3120221082551971936[84] = 0;
   out_3120221082551971936[85] = 0;
   out_3120221082551971936[86] = 0;
   out_3120221082551971936[87] = 0;
   out_3120221082551971936[88] = 0;
   out_3120221082551971936[89] = 0;
   out_3120221082551971936[90] = 0;
   out_3120221082551971936[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3120221082551971936[92] = 1;
   out_3120221082551971936[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3120221082551971936[94] = 0;
   out_3120221082551971936[95] = 0;
   out_3120221082551971936[96] = 0;
   out_3120221082551971936[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120221082551971936[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3120221082551971936[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120221082551971936[100] = 0;
   out_3120221082551971936[101] = 0;
   out_3120221082551971936[102] = 0;
   out_3120221082551971936[103] = 0;
   out_3120221082551971936[104] = 0;
   out_3120221082551971936[105] = 0;
   out_3120221082551971936[106] = 0;
   out_3120221082551971936[107] = 0;
   out_3120221082551971936[108] = 0;
   out_3120221082551971936[109] = 0;
   out_3120221082551971936[110] = 0;
   out_3120221082551971936[111] = 0;
   out_3120221082551971936[112] = 0;
   out_3120221082551971936[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3120221082551971936[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3120221082551971936[115] = 1;
   out_3120221082551971936[116] = 0;
   out_3120221082551971936[117] = 0;
   out_3120221082551971936[118] = 0;
   out_3120221082551971936[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120221082551971936[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120221082551971936[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3120221082551971936[122] = 0;
   out_3120221082551971936[123] = 0;
   out_3120221082551971936[124] = 0;
   out_3120221082551971936[125] = 0;
   out_3120221082551971936[126] = 0;
   out_3120221082551971936[127] = 0;
   out_3120221082551971936[128] = 0;
   out_3120221082551971936[129] = 0;
   out_3120221082551971936[130] = 0;
   out_3120221082551971936[131] = 0;
   out_3120221082551971936[132] = 0;
   out_3120221082551971936[133] = 0;
   out_3120221082551971936[134] = 0;
   out_3120221082551971936[135] = 0;
   out_3120221082551971936[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_3120221082551971936[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3120221082551971936[138] = 1;
   out_3120221082551971936[139] = 0;
   out_3120221082551971936[140] = 0;
   out_3120221082551971936[141] = 0;
   out_3120221082551971936[142] = 0;
   out_3120221082551971936[143] = 0;
   out_3120221082551971936[144] = 0;
   out_3120221082551971936[145] = 0;
   out_3120221082551971936[146] = 0;
   out_3120221082551971936[147] = 0;
   out_3120221082551971936[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3120221082551971936[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120221082551971936[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120221082551971936[151] = 0;
   out_3120221082551971936[152] = 0;
   out_3120221082551971936[153] = 0;
   out_3120221082551971936[154] = 0;
   out_3120221082551971936[155] = 0;
   out_3120221082551971936[156] = 0;
   out_3120221082551971936[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_3120221082551971936[158] = 0;
   out_3120221082551971936[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3120221082551971936[160] = 0;
   out_3120221082551971936[161] = 1;
   out_3120221082551971936[162] = 0;
   out_3120221082551971936[163] = 0;
   out_3120221082551971936[164] = 0;
   out_3120221082551971936[165] = 0;
   out_3120221082551971936[166] = 0;
   out_3120221082551971936[167] = 0;
   out_3120221082551971936[168] = 0;
   out_3120221082551971936[169] = 0;
   out_3120221082551971936[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120221082551971936[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3120221082551971936[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120221082551971936[173] = 0;
   out_3120221082551971936[174] = 0;
   out_3120221082551971936[175] = 0;
   out_3120221082551971936[176] = 0;
   out_3120221082551971936[177] = 0;
   out_3120221082551971936[178] = 0;
   out_3120221082551971936[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_3120221082551971936[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3120221082551971936[181] = 0;
   out_3120221082551971936[182] = 0;
   out_3120221082551971936[183] = 0;
   out_3120221082551971936[184] = 1;
   out_3120221082551971936[185] = 0;
   out_3120221082551971936[186] = 0;
   out_3120221082551971936[187] = 0;
   out_3120221082551971936[188] = 0;
   out_3120221082551971936[189] = 0;
   out_3120221082551971936[190] = 0;
   out_3120221082551971936[191] = 0;
   out_3120221082551971936[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120221082551971936[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120221082551971936[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3120221082551971936[195] = 0;
   out_3120221082551971936[196] = 0;
   out_3120221082551971936[197] = 0;
   out_3120221082551971936[198] = 0;
   out_3120221082551971936[199] = 0;
   out_3120221082551971936[200] = 0;
   out_3120221082551971936[201] = 0;
   out_3120221082551971936[202] = 0;
   out_3120221082551971936[203] = 0;
   out_3120221082551971936[204] = 0;
   out_3120221082551971936[205] = 0;
   out_3120221082551971936[206] = 0;
   out_3120221082551971936[207] = 1;
   out_3120221082551971936[208] = 0;
   out_3120221082551971936[209] = 0;
   out_3120221082551971936[210] = 0;
   out_3120221082551971936[211] = 0;
   out_3120221082551971936[212] = 0;
   out_3120221082551971936[213] = 0;
   out_3120221082551971936[214] = 0;
   out_3120221082551971936[215] = 0;
   out_3120221082551971936[216] = 0;
   out_3120221082551971936[217] = 0;
   out_3120221082551971936[218] = 0;
   out_3120221082551971936[219] = 0;
   out_3120221082551971936[220] = 0;
   out_3120221082551971936[221] = 0;
   out_3120221082551971936[222] = 0;
   out_3120221082551971936[223] = 0;
   out_3120221082551971936[224] = 0;
   out_3120221082551971936[225] = 0;
   out_3120221082551971936[226] = 0;
   out_3120221082551971936[227] = 0;
   out_3120221082551971936[228] = 0;
   out_3120221082551971936[229] = 0;
   out_3120221082551971936[230] = 1;
   out_3120221082551971936[231] = 0;
   out_3120221082551971936[232] = 0;
   out_3120221082551971936[233] = 0;
   out_3120221082551971936[234] = 0;
   out_3120221082551971936[235] = 0;
   out_3120221082551971936[236] = 0;
   out_3120221082551971936[237] = 0;
   out_3120221082551971936[238] = 0;
   out_3120221082551971936[239] = 0;
   out_3120221082551971936[240] = 0;
   out_3120221082551971936[241] = 0;
   out_3120221082551971936[242] = 0;
   out_3120221082551971936[243] = 0;
   out_3120221082551971936[244] = 0;
   out_3120221082551971936[245] = 0;
   out_3120221082551971936[246] = 0;
   out_3120221082551971936[247] = 0;
   out_3120221082551971936[248] = 0;
   out_3120221082551971936[249] = 0;
   out_3120221082551971936[250] = 0;
   out_3120221082551971936[251] = 0;
   out_3120221082551971936[252] = 0;
   out_3120221082551971936[253] = 1;
   out_3120221082551971936[254] = 0;
   out_3120221082551971936[255] = 0;
   out_3120221082551971936[256] = 0;
   out_3120221082551971936[257] = 0;
   out_3120221082551971936[258] = 0;
   out_3120221082551971936[259] = 0;
   out_3120221082551971936[260] = 0;
   out_3120221082551971936[261] = 0;
   out_3120221082551971936[262] = 0;
   out_3120221082551971936[263] = 0;
   out_3120221082551971936[264] = 0;
   out_3120221082551971936[265] = 0;
   out_3120221082551971936[266] = 0;
   out_3120221082551971936[267] = 0;
   out_3120221082551971936[268] = 0;
   out_3120221082551971936[269] = 0;
   out_3120221082551971936[270] = 0;
   out_3120221082551971936[271] = 0;
   out_3120221082551971936[272] = 0;
   out_3120221082551971936[273] = 0;
   out_3120221082551971936[274] = 0;
   out_3120221082551971936[275] = 0;
   out_3120221082551971936[276] = 1;
   out_3120221082551971936[277] = 0;
   out_3120221082551971936[278] = 0;
   out_3120221082551971936[279] = 0;
   out_3120221082551971936[280] = 0;
   out_3120221082551971936[281] = 0;
   out_3120221082551971936[282] = 0;
   out_3120221082551971936[283] = 0;
   out_3120221082551971936[284] = 0;
   out_3120221082551971936[285] = 0;
   out_3120221082551971936[286] = 0;
   out_3120221082551971936[287] = 0;
   out_3120221082551971936[288] = 0;
   out_3120221082551971936[289] = 0;
   out_3120221082551971936[290] = 0;
   out_3120221082551971936[291] = 0;
   out_3120221082551971936[292] = 0;
   out_3120221082551971936[293] = 0;
   out_3120221082551971936[294] = 0;
   out_3120221082551971936[295] = 0;
   out_3120221082551971936[296] = 0;
   out_3120221082551971936[297] = 0;
   out_3120221082551971936[298] = 0;
   out_3120221082551971936[299] = 1;
   out_3120221082551971936[300] = 0;
   out_3120221082551971936[301] = 0;
   out_3120221082551971936[302] = 0;
   out_3120221082551971936[303] = 0;
   out_3120221082551971936[304] = 0;
   out_3120221082551971936[305] = 0;
   out_3120221082551971936[306] = 0;
   out_3120221082551971936[307] = 0;
   out_3120221082551971936[308] = 0;
   out_3120221082551971936[309] = 0;
   out_3120221082551971936[310] = 0;
   out_3120221082551971936[311] = 0;
   out_3120221082551971936[312] = 0;
   out_3120221082551971936[313] = 0;
   out_3120221082551971936[314] = 0;
   out_3120221082551971936[315] = 0;
   out_3120221082551971936[316] = 0;
   out_3120221082551971936[317] = 0;
   out_3120221082551971936[318] = 0;
   out_3120221082551971936[319] = 0;
   out_3120221082551971936[320] = 0;
   out_3120221082551971936[321] = 0;
   out_3120221082551971936[322] = 1;
   out_3120221082551971936[323] = 0;
   out_3120221082551971936[324] = 0;
   out_3120221082551971936[325] = 0;
   out_3120221082551971936[326] = 0;
   out_3120221082551971936[327] = 0;
   out_3120221082551971936[328] = 0;
   out_3120221082551971936[329] = 0;
   out_3120221082551971936[330] = 0;
   out_3120221082551971936[331] = 0;
   out_3120221082551971936[332] = 0;
   out_3120221082551971936[333] = 0;
   out_3120221082551971936[334] = 0;
   out_3120221082551971936[335] = 0;
   out_3120221082551971936[336] = 0;
   out_3120221082551971936[337] = 0;
   out_3120221082551971936[338] = 0;
   out_3120221082551971936[339] = 0;
   out_3120221082551971936[340] = 0;
   out_3120221082551971936[341] = 0;
   out_3120221082551971936[342] = 0;
   out_3120221082551971936[343] = 0;
   out_3120221082551971936[344] = 0;
   out_3120221082551971936[345] = 1;
   out_3120221082551971936[346] = 0;
   out_3120221082551971936[347] = 0;
   out_3120221082551971936[348] = 0;
   out_3120221082551971936[349] = 0;
   out_3120221082551971936[350] = 0;
   out_3120221082551971936[351] = 0;
   out_3120221082551971936[352] = 0;
   out_3120221082551971936[353] = 0;
   out_3120221082551971936[354] = 0;
   out_3120221082551971936[355] = 0;
   out_3120221082551971936[356] = 0;
   out_3120221082551971936[357] = 0;
   out_3120221082551971936[358] = 0;
   out_3120221082551971936[359] = 0;
   out_3120221082551971936[360] = 0;
   out_3120221082551971936[361] = 0;
   out_3120221082551971936[362] = 0;
   out_3120221082551971936[363] = 0;
   out_3120221082551971936[364] = 0;
   out_3120221082551971936[365] = 0;
   out_3120221082551971936[366] = 0;
   out_3120221082551971936[367] = 0;
   out_3120221082551971936[368] = 1;
   out_3120221082551971936[369] = 0;
   out_3120221082551971936[370] = 0;
   out_3120221082551971936[371] = 0;
   out_3120221082551971936[372] = 0;
   out_3120221082551971936[373] = 0;
   out_3120221082551971936[374] = 0;
   out_3120221082551971936[375] = 0;
   out_3120221082551971936[376] = 0;
   out_3120221082551971936[377] = 0;
   out_3120221082551971936[378] = 0;
   out_3120221082551971936[379] = 0;
   out_3120221082551971936[380] = 0;
   out_3120221082551971936[381] = 0;
   out_3120221082551971936[382] = 0;
   out_3120221082551971936[383] = 0;
   out_3120221082551971936[384] = 0;
   out_3120221082551971936[385] = 0;
   out_3120221082551971936[386] = 0;
   out_3120221082551971936[387] = 0;
   out_3120221082551971936[388] = 0;
   out_3120221082551971936[389] = 0;
   out_3120221082551971936[390] = 0;
   out_3120221082551971936[391] = 1;
   out_3120221082551971936[392] = 0;
   out_3120221082551971936[393] = 0;
   out_3120221082551971936[394] = 0;
   out_3120221082551971936[395] = 0;
   out_3120221082551971936[396] = 0;
   out_3120221082551971936[397] = 0;
   out_3120221082551971936[398] = 0;
   out_3120221082551971936[399] = 0;
   out_3120221082551971936[400] = 0;
   out_3120221082551971936[401] = 0;
   out_3120221082551971936[402] = 0;
   out_3120221082551971936[403] = 0;
   out_3120221082551971936[404] = 0;
   out_3120221082551971936[405] = 0;
   out_3120221082551971936[406] = 0;
   out_3120221082551971936[407] = 0;
   out_3120221082551971936[408] = 0;
   out_3120221082551971936[409] = 0;
   out_3120221082551971936[410] = 0;
   out_3120221082551971936[411] = 0;
   out_3120221082551971936[412] = 0;
   out_3120221082551971936[413] = 0;
   out_3120221082551971936[414] = 1;
   out_3120221082551971936[415] = 0;
   out_3120221082551971936[416] = 0;
   out_3120221082551971936[417] = 0;
   out_3120221082551971936[418] = 0;
   out_3120221082551971936[419] = 0;
   out_3120221082551971936[420] = 0;
   out_3120221082551971936[421] = 0;
   out_3120221082551971936[422] = 0;
   out_3120221082551971936[423] = 0;
   out_3120221082551971936[424] = 0;
   out_3120221082551971936[425] = 0;
   out_3120221082551971936[426] = 0;
   out_3120221082551971936[427] = 0;
   out_3120221082551971936[428] = 0;
   out_3120221082551971936[429] = 0;
   out_3120221082551971936[430] = 0;
   out_3120221082551971936[431] = 0;
   out_3120221082551971936[432] = 0;
   out_3120221082551971936[433] = 0;
   out_3120221082551971936[434] = 0;
   out_3120221082551971936[435] = 0;
   out_3120221082551971936[436] = 0;
   out_3120221082551971936[437] = 1;
   out_3120221082551971936[438] = 0;
   out_3120221082551971936[439] = 0;
   out_3120221082551971936[440] = 0;
   out_3120221082551971936[441] = 0;
   out_3120221082551971936[442] = 0;
   out_3120221082551971936[443] = 0;
   out_3120221082551971936[444] = 0;
   out_3120221082551971936[445] = 0;
   out_3120221082551971936[446] = 0;
   out_3120221082551971936[447] = 0;
   out_3120221082551971936[448] = 0;
   out_3120221082551971936[449] = 0;
   out_3120221082551971936[450] = 0;
   out_3120221082551971936[451] = 0;
   out_3120221082551971936[452] = 0;
   out_3120221082551971936[453] = 0;
   out_3120221082551971936[454] = 0;
   out_3120221082551971936[455] = 0;
   out_3120221082551971936[456] = 0;
   out_3120221082551971936[457] = 0;
   out_3120221082551971936[458] = 0;
   out_3120221082551971936[459] = 0;
   out_3120221082551971936[460] = 1;
   out_3120221082551971936[461] = 0;
   out_3120221082551971936[462] = 0;
   out_3120221082551971936[463] = 0;
   out_3120221082551971936[464] = 0;
   out_3120221082551971936[465] = 0;
   out_3120221082551971936[466] = 0;
   out_3120221082551971936[467] = 0;
   out_3120221082551971936[468] = 0;
   out_3120221082551971936[469] = 0;
   out_3120221082551971936[470] = 0;
   out_3120221082551971936[471] = 0;
   out_3120221082551971936[472] = 0;
   out_3120221082551971936[473] = 0;
   out_3120221082551971936[474] = 0;
   out_3120221082551971936[475] = 0;
   out_3120221082551971936[476] = 0;
   out_3120221082551971936[477] = 0;
   out_3120221082551971936[478] = 0;
   out_3120221082551971936[479] = 0;
   out_3120221082551971936[480] = 0;
   out_3120221082551971936[481] = 0;
   out_3120221082551971936[482] = 0;
   out_3120221082551971936[483] = 1;
}
void h_3(double *state, double *unused, double *out_2945031730277704093) {
   out_2945031730277704093[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_6444261605705101960) {
   out_6444261605705101960[0] = 0;
   out_6444261605705101960[1] = 0;
   out_6444261605705101960[2] = 0;
   out_6444261605705101960[3] = 0;
   out_6444261605705101960[4] = 0;
   out_6444261605705101960[5] = 0;
   out_6444261605705101960[6] = 0;
   out_6444261605705101960[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6444261605705101960[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6444261605705101960[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6444261605705101960[10] = 0;
   out_6444261605705101960[11] = 0;
   out_6444261605705101960[12] = 0;
   out_6444261605705101960[13] = 0;
   out_6444261605705101960[14] = 0;
   out_6444261605705101960[15] = 0;
   out_6444261605705101960[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6444261605705101960[17] = 0;
   out_6444261605705101960[18] = 0;
   out_6444261605705101960[19] = 0;
   out_6444261605705101960[20] = 0;
   out_6444261605705101960[21] = 0;
   out_6444261605705101960[22] = 0;
}
void h_4(double *state, double *unused, double *out_1738158655202000054) {
   out_1738158655202000054[0] = state[10] + state[13];
   out_1738158655202000054[1] = state[11] + state[14];
   out_1738158655202000054[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6948699031232825544) {
   out_6948699031232825544[0] = 0;
   out_6948699031232825544[1] = 0;
   out_6948699031232825544[2] = 0;
   out_6948699031232825544[3] = 0;
   out_6948699031232825544[4] = 0;
   out_6948699031232825544[5] = 0;
   out_6948699031232825544[6] = 0;
   out_6948699031232825544[7] = 0;
   out_6948699031232825544[8] = 0;
   out_6948699031232825544[9] = 0;
   out_6948699031232825544[10] = 1;
   out_6948699031232825544[11] = 0;
   out_6948699031232825544[12] = 0;
   out_6948699031232825544[13] = 1;
   out_6948699031232825544[14] = 0;
   out_6948699031232825544[15] = 0;
   out_6948699031232825544[16] = 0;
   out_6948699031232825544[17] = 0;
   out_6948699031232825544[18] = 0;
   out_6948699031232825544[19] = 0;
   out_6948699031232825544[20] = 0;
   out_6948699031232825544[21] = 0;
   out_6948699031232825544[22] = 0;
   out_6948699031232825544[23] = 0;
   out_6948699031232825544[24] = 0;
   out_6948699031232825544[25] = 0;
   out_6948699031232825544[26] = 0;
   out_6948699031232825544[27] = 0;
   out_6948699031232825544[28] = 0;
   out_6948699031232825544[29] = 0;
   out_6948699031232825544[30] = 0;
   out_6948699031232825544[31] = 0;
   out_6948699031232825544[32] = 0;
   out_6948699031232825544[33] = 0;
   out_6948699031232825544[34] = 1;
   out_6948699031232825544[35] = 0;
   out_6948699031232825544[36] = 0;
   out_6948699031232825544[37] = 1;
   out_6948699031232825544[38] = 0;
   out_6948699031232825544[39] = 0;
   out_6948699031232825544[40] = 0;
   out_6948699031232825544[41] = 0;
   out_6948699031232825544[42] = 0;
   out_6948699031232825544[43] = 0;
   out_6948699031232825544[44] = 0;
   out_6948699031232825544[45] = 0;
   out_6948699031232825544[46] = 0;
   out_6948699031232825544[47] = 0;
   out_6948699031232825544[48] = 0;
   out_6948699031232825544[49] = 0;
   out_6948699031232825544[50] = 0;
   out_6948699031232825544[51] = 0;
   out_6948699031232825544[52] = 0;
   out_6948699031232825544[53] = 0;
   out_6948699031232825544[54] = 0;
   out_6948699031232825544[55] = 0;
   out_6948699031232825544[56] = 0;
   out_6948699031232825544[57] = 0;
   out_6948699031232825544[58] = 1;
   out_6948699031232825544[59] = 0;
   out_6948699031232825544[60] = 0;
   out_6948699031232825544[61] = 1;
   out_6948699031232825544[62] = 0;
   out_6948699031232825544[63] = 0;
   out_6948699031232825544[64] = 0;
   out_6948699031232825544[65] = 0;
   out_6948699031232825544[66] = 0;
   out_6948699031232825544[67] = 0;
   out_6948699031232825544[68] = 0;
}
void h_9(double *state, double *unused, double *out_1444913281554593646) {
   out_1444913281554593646[0] = state[10];
   out_1444913281554593646[1] = state[11];
   out_1444913281554593646[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2419835801272887251) {
   out_2419835801272887251[0] = 0;
   out_2419835801272887251[1] = 0;
   out_2419835801272887251[2] = 0;
   out_2419835801272887251[3] = 0;
   out_2419835801272887251[4] = 0;
   out_2419835801272887251[5] = 0;
   out_2419835801272887251[6] = 0;
   out_2419835801272887251[7] = 0;
   out_2419835801272887251[8] = 0;
   out_2419835801272887251[9] = 0;
   out_2419835801272887251[10] = 1;
   out_2419835801272887251[11] = 0;
   out_2419835801272887251[12] = 0;
   out_2419835801272887251[13] = 0;
   out_2419835801272887251[14] = 0;
   out_2419835801272887251[15] = 0;
   out_2419835801272887251[16] = 0;
   out_2419835801272887251[17] = 0;
   out_2419835801272887251[18] = 0;
   out_2419835801272887251[19] = 0;
   out_2419835801272887251[20] = 0;
   out_2419835801272887251[21] = 0;
   out_2419835801272887251[22] = 0;
   out_2419835801272887251[23] = 0;
   out_2419835801272887251[24] = 0;
   out_2419835801272887251[25] = 0;
   out_2419835801272887251[26] = 0;
   out_2419835801272887251[27] = 0;
   out_2419835801272887251[28] = 0;
   out_2419835801272887251[29] = 0;
   out_2419835801272887251[30] = 0;
   out_2419835801272887251[31] = 0;
   out_2419835801272887251[32] = 0;
   out_2419835801272887251[33] = 0;
   out_2419835801272887251[34] = 1;
   out_2419835801272887251[35] = 0;
   out_2419835801272887251[36] = 0;
   out_2419835801272887251[37] = 0;
   out_2419835801272887251[38] = 0;
   out_2419835801272887251[39] = 0;
   out_2419835801272887251[40] = 0;
   out_2419835801272887251[41] = 0;
   out_2419835801272887251[42] = 0;
   out_2419835801272887251[43] = 0;
   out_2419835801272887251[44] = 0;
   out_2419835801272887251[45] = 0;
   out_2419835801272887251[46] = 0;
   out_2419835801272887251[47] = 0;
   out_2419835801272887251[48] = 0;
   out_2419835801272887251[49] = 0;
   out_2419835801272887251[50] = 0;
   out_2419835801272887251[51] = 0;
   out_2419835801272887251[52] = 0;
   out_2419835801272887251[53] = 0;
   out_2419835801272887251[54] = 0;
   out_2419835801272887251[55] = 0;
   out_2419835801272887251[56] = 0;
   out_2419835801272887251[57] = 0;
   out_2419835801272887251[58] = 1;
   out_2419835801272887251[59] = 0;
   out_2419835801272887251[60] = 0;
   out_2419835801272887251[61] = 0;
   out_2419835801272887251[62] = 0;
   out_2419835801272887251[63] = 0;
   out_2419835801272887251[64] = 0;
   out_2419835801272887251[65] = 0;
   out_2419835801272887251[66] = 0;
   out_2419835801272887251[67] = 0;
   out_2419835801272887251[68] = 0;
}
void h_10(double *state, double *unused, double *out_8315307708455960571) {
   out_8315307708455960571[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_8315307708455960571[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_8315307708455960571[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_6305239117786072402) {
   out_6305239117786072402[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6305239117786072402[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6305239117786072402[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6305239117786072402[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6305239117786072402[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6305239117786072402[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6305239117786072402[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6305239117786072402[7] = 0;
   out_6305239117786072402[8] = 0;
   out_6305239117786072402[9] = 0;
   out_6305239117786072402[10] = 0;
   out_6305239117786072402[11] = 0;
   out_6305239117786072402[12] = 0;
   out_6305239117786072402[13] = 0;
   out_6305239117786072402[14] = 0;
   out_6305239117786072402[15] = 0;
   out_6305239117786072402[16] = 0;
   out_6305239117786072402[17] = 1;
   out_6305239117786072402[18] = 0;
   out_6305239117786072402[19] = 0;
   out_6305239117786072402[20] = 0;
   out_6305239117786072402[21] = 0;
   out_6305239117786072402[22] = 0;
   out_6305239117786072402[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6305239117786072402[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6305239117786072402[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6305239117786072402[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6305239117786072402[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6305239117786072402[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6305239117786072402[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6305239117786072402[30] = 0;
   out_6305239117786072402[31] = 0;
   out_6305239117786072402[32] = 0;
   out_6305239117786072402[33] = 0;
   out_6305239117786072402[34] = 0;
   out_6305239117786072402[35] = 0;
   out_6305239117786072402[36] = 0;
   out_6305239117786072402[37] = 0;
   out_6305239117786072402[38] = 0;
   out_6305239117786072402[39] = 0;
   out_6305239117786072402[40] = 0;
   out_6305239117786072402[41] = 1;
   out_6305239117786072402[42] = 0;
   out_6305239117786072402[43] = 0;
   out_6305239117786072402[44] = 0;
   out_6305239117786072402[45] = 0;
   out_6305239117786072402[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6305239117786072402[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6305239117786072402[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6305239117786072402[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6305239117786072402[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6305239117786072402[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6305239117786072402[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6305239117786072402[53] = 0;
   out_6305239117786072402[54] = 0;
   out_6305239117786072402[55] = 0;
   out_6305239117786072402[56] = 0;
   out_6305239117786072402[57] = 0;
   out_6305239117786072402[58] = 0;
   out_6305239117786072402[59] = 0;
   out_6305239117786072402[60] = 0;
   out_6305239117786072402[61] = 0;
   out_6305239117786072402[62] = 0;
   out_6305239117786072402[63] = 0;
   out_6305239117786072402[64] = 0;
   out_6305239117786072402[65] = 1;
   out_6305239117786072402[66] = 0;
   out_6305239117786072402[67] = 0;
   out_6305239117786072402[68] = 0;
}
void h_12(double *state, double *unused, double *out_708046058748378235) {
   out_708046058748378235[0] = state[0];
   out_708046058748378235[1] = state[1];
   out_708046058748378235[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4842143519493615975) {
   out_4842143519493615975[0] = 1;
   out_4842143519493615975[1] = 0;
   out_4842143519493615975[2] = 0;
   out_4842143519493615975[3] = 0;
   out_4842143519493615975[4] = 0;
   out_4842143519493615975[5] = 0;
   out_4842143519493615975[6] = 0;
   out_4842143519493615975[7] = 0;
   out_4842143519493615975[8] = 0;
   out_4842143519493615975[9] = 0;
   out_4842143519493615975[10] = 0;
   out_4842143519493615975[11] = 0;
   out_4842143519493615975[12] = 0;
   out_4842143519493615975[13] = 0;
   out_4842143519493615975[14] = 0;
   out_4842143519493615975[15] = 0;
   out_4842143519493615975[16] = 0;
   out_4842143519493615975[17] = 0;
   out_4842143519493615975[18] = 0;
   out_4842143519493615975[19] = 0;
   out_4842143519493615975[20] = 0;
   out_4842143519493615975[21] = 0;
   out_4842143519493615975[22] = 0;
   out_4842143519493615975[23] = 0;
   out_4842143519493615975[24] = 1;
   out_4842143519493615975[25] = 0;
   out_4842143519493615975[26] = 0;
   out_4842143519493615975[27] = 0;
   out_4842143519493615975[28] = 0;
   out_4842143519493615975[29] = 0;
   out_4842143519493615975[30] = 0;
   out_4842143519493615975[31] = 0;
   out_4842143519493615975[32] = 0;
   out_4842143519493615975[33] = 0;
   out_4842143519493615975[34] = 0;
   out_4842143519493615975[35] = 0;
   out_4842143519493615975[36] = 0;
   out_4842143519493615975[37] = 0;
   out_4842143519493615975[38] = 0;
   out_4842143519493615975[39] = 0;
   out_4842143519493615975[40] = 0;
   out_4842143519493615975[41] = 0;
   out_4842143519493615975[42] = 0;
   out_4842143519493615975[43] = 0;
   out_4842143519493615975[44] = 0;
   out_4842143519493615975[45] = 0;
   out_4842143519493615975[46] = 0;
   out_4842143519493615975[47] = 0;
   out_4842143519493615975[48] = 1;
   out_4842143519493615975[49] = 0;
   out_4842143519493615975[50] = 0;
   out_4842143519493615975[51] = 0;
   out_4842143519493615975[52] = 0;
   out_4842143519493615975[53] = 0;
   out_4842143519493615975[54] = 0;
   out_4842143519493615975[55] = 0;
   out_4842143519493615975[56] = 0;
   out_4842143519493615975[57] = 0;
   out_4842143519493615975[58] = 0;
   out_4842143519493615975[59] = 0;
   out_4842143519493615975[60] = 0;
   out_4842143519493615975[61] = 0;
   out_4842143519493615975[62] = 0;
   out_4842143519493615975[63] = 0;
   out_4842143519493615975[64] = 0;
   out_4842143519493615975[65] = 0;
   out_4842143519493615975[66] = 0;
   out_4842143519493615975[67] = 0;
   out_4842143519493615975[68] = 0;
}
void h_31(double *state, double *unused, double *out_2638610533163085972) {
   out_2638610533163085972[0] = state[7];
   out_2638610533163085972[1] = state[8];
   out_2638610533163085972[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7517233294637035796) {
   out_7517233294637035796[0] = 0;
   out_7517233294637035796[1] = 0;
   out_7517233294637035796[2] = 0;
   out_7517233294637035796[3] = 0;
   out_7517233294637035796[4] = 0;
   out_7517233294637035796[5] = 0;
   out_7517233294637035796[6] = 0;
   out_7517233294637035796[7] = 1;
   out_7517233294637035796[8] = 0;
   out_7517233294637035796[9] = 0;
   out_7517233294637035796[10] = 0;
   out_7517233294637035796[11] = 0;
   out_7517233294637035796[12] = 0;
   out_7517233294637035796[13] = 0;
   out_7517233294637035796[14] = 0;
   out_7517233294637035796[15] = 0;
   out_7517233294637035796[16] = 0;
   out_7517233294637035796[17] = 0;
   out_7517233294637035796[18] = 0;
   out_7517233294637035796[19] = 0;
   out_7517233294637035796[20] = 0;
   out_7517233294637035796[21] = 0;
   out_7517233294637035796[22] = 0;
   out_7517233294637035796[23] = 0;
   out_7517233294637035796[24] = 0;
   out_7517233294637035796[25] = 0;
   out_7517233294637035796[26] = 0;
   out_7517233294637035796[27] = 0;
   out_7517233294637035796[28] = 0;
   out_7517233294637035796[29] = 0;
   out_7517233294637035796[30] = 0;
   out_7517233294637035796[31] = 1;
   out_7517233294637035796[32] = 0;
   out_7517233294637035796[33] = 0;
   out_7517233294637035796[34] = 0;
   out_7517233294637035796[35] = 0;
   out_7517233294637035796[36] = 0;
   out_7517233294637035796[37] = 0;
   out_7517233294637035796[38] = 0;
   out_7517233294637035796[39] = 0;
   out_7517233294637035796[40] = 0;
   out_7517233294637035796[41] = 0;
   out_7517233294637035796[42] = 0;
   out_7517233294637035796[43] = 0;
   out_7517233294637035796[44] = 0;
   out_7517233294637035796[45] = 0;
   out_7517233294637035796[46] = 0;
   out_7517233294637035796[47] = 0;
   out_7517233294637035796[48] = 0;
   out_7517233294637035796[49] = 0;
   out_7517233294637035796[50] = 0;
   out_7517233294637035796[51] = 0;
   out_7517233294637035796[52] = 0;
   out_7517233294637035796[53] = 0;
   out_7517233294637035796[54] = 0;
   out_7517233294637035796[55] = 1;
   out_7517233294637035796[56] = 0;
   out_7517233294637035796[57] = 0;
   out_7517233294637035796[58] = 0;
   out_7517233294637035796[59] = 0;
   out_7517233294637035796[60] = 0;
   out_7517233294637035796[61] = 0;
   out_7517233294637035796[62] = 0;
   out_7517233294637035796[63] = 0;
   out_7517233294637035796[64] = 0;
   out_7517233294637035796[65] = 0;
   out_7517233294637035796[66] = 0;
   out_7517233294637035796[67] = 0;
   out_7517233294637035796[68] = 0;
}
void h_32(double *state, double *unused, double *out_6513328226278578461) {
   out_6513328226278578461[0] = state[3];
   out_6513328226278578461[1] = state[4];
   out_6513328226278578461[2] = state[5];
   out_6513328226278578461[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8979009057424764173) {
   out_8979009057424764173[0] = 0;
   out_8979009057424764173[1] = 0;
   out_8979009057424764173[2] = 0;
   out_8979009057424764173[3] = 1;
   out_8979009057424764173[4] = 0;
   out_8979009057424764173[5] = 0;
   out_8979009057424764173[6] = 0;
   out_8979009057424764173[7] = 0;
   out_8979009057424764173[8] = 0;
   out_8979009057424764173[9] = 0;
   out_8979009057424764173[10] = 0;
   out_8979009057424764173[11] = 0;
   out_8979009057424764173[12] = 0;
   out_8979009057424764173[13] = 0;
   out_8979009057424764173[14] = 0;
   out_8979009057424764173[15] = 0;
   out_8979009057424764173[16] = 0;
   out_8979009057424764173[17] = 0;
   out_8979009057424764173[18] = 0;
   out_8979009057424764173[19] = 0;
   out_8979009057424764173[20] = 0;
   out_8979009057424764173[21] = 0;
   out_8979009057424764173[22] = 0;
   out_8979009057424764173[23] = 0;
   out_8979009057424764173[24] = 0;
   out_8979009057424764173[25] = 0;
   out_8979009057424764173[26] = 0;
   out_8979009057424764173[27] = 1;
   out_8979009057424764173[28] = 0;
   out_8979009057424764173[29] = 0;
   out_8979009057424764173[30] = 0;
   out_8979009057424764173[31] = 0;
   out_8979009057424764173[32] = 0;
   out_8979009057424764173[33] = 0;
   out_8979009057424764173[34] = 0;
   out_8979009057424764173[35] = 0;
   out_8979009057424764173[36] = 0;
   out_8979009057424764173[37] = 0;
   out_8979009057424764173[38] = 0;
   out_8979009057424764173[39] = 0;
   out_8979009057424764173[40] = 0;
   out_8979009057424764173[41] = 0;
   out_8979009057424764173[42] = 0;
   out_8979009057424764173[43] = 0;
   out_8979009057424764173[44] = 0;
   out_8979009057424764173[45] = 0;
   out_8979009057424764173[46] = 0;
   out_8979009057424764173[47] = 0;
   out_8979009057424764173[48] = 0;
   out_8979009057424764173[49] = 0;
   out_8979009057424764173[50] = 0;
   out_8979009057424764173[51] = 1;
   out_8979009057424764173[52] = 0;
   out_8979009057424764173[53] = 0;
   out_8979009057424764173[54] = 0;
   out_8979009057424764173[55] = 0;
   out_8979009057424764173[56] = 0;
   out_8979009057424764173[57] = 0;
   out_8979009057424764173[58] = 0;
   out_8979009057424764173[59] = 0;
   out_8979009057424764173[60] = 0;
   out_8979009057424764173[61] = 0;
   out_8979009057424764173[62] = 0;
   out_8979009057424764173[63] = 0;
   out_8979009057424764173[64] = 0;
   out_8979009057424764173[65] = 0;
   out_8979009057424764173[66] = 0;
   out_8979009057424764173[67] = 0;
   out_8979009057424764173[68] = 0;
   out_8979009057424764173[69] = 0;
   out_8979009057424764173[70] = 0;
   out_8979009057424764173[71] = 0;
   out_8979009057424764173[72] = 0;
   out_8979009057424764173[73] = 0;
   out_8979009057424764173[74] = 0;
   out_8979009057424764173[75] = 1;
   out_8979009057424764173[76] = 0;
   out_8979009057424764173[77] = 0;
   out_8979009057424764173[78] = 0;
   out_8979009057424764173[79] = 0;
   out_8979009057424764173[80] = 0;
   out_8979009057424764173[81] = 0;
   out_8979009057424764173[82] = 0;
   out_8979009057424764173[83] = 0;
   out_8979009057424764173[84] = 0;
   out_8979009057424764173[85] = 0;
   out_8979009057424764173[86] = 0;
   out_8979009057424764173[87] = 0;
   out_8979009057424764173[88] = 0;
   out_8979009057424764173[89] = 0;
   out_8979009057424764173[90] = 0;
   out_8979009057424764173[91] = 0;
}
void h_13(double *state, double *unused, double *out_6044833227898883470) {
   out_6044833227898883470[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6044833227898883470[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6044833227898883470[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_927386995965160381) {
   out_927386995965160381[0] = 0;
   out_927386995965160381[1] = 0;
   out_927386995965160381[2] = 0;
   out_927386995965160381[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_927386995965160381[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_927386995965160381[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_927386995965160381[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_927386995965160381[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_927386995965160381[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_927386995965160381[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_927386995965160381[10] = 0;
   out_927386995965160381[11] = 0;
   out_927386995965160381[12] = 0;
   out_927386995965160381[13] = 0;
   out_927386995965160381[14] = 0;
   out_927386995965160381[15] = 0;
   out_927386995965160381[16] = 0;
   out_927386995965160381[17] = 0;
   out_927386995965160381[18] = 0;
   out_927386995965160381[19] = 0;
   out_927386995965160381[20] = 0;
   out_927386995965160381[21] = 0;
   out_927386995965160381[22] = 0;
   out_927386995965160381[23] = 0;
   out_927386995965160381[24] = 0;
   out_927386995965160381[25] = 0;
   out_927386995965160381[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_927386995965160381[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_927386995965160381[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_927386995965160381[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_927386995965160381[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_927386995965160381[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_927386995965160381[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_927386995965160381[33] = 0;
   out_927386995965160381[34] = 0;
   out_927386995965160381[35] = 0;
   out_927386995965160381[36] = 0;
   out_927386995965160381[37] = 0;
   out_927386995965160381[38] = 0;
   out_927386995965160381[39] = 0;
   out_927386995965160381[40] = 0;
   out_927386995965160381[41] = 0;
   out_927386995965160381[42] = 0;
   out_927386995965160381[43] = 0;
   out_927386995965160381[44] = 0;
   out_927386995965160381[45] = 0;
   out_927386995965160381[46] = 0;
   out_927386995965160381[47] = 0;
   out_927386995965160381[48] = 0;
   out_927386995965160381[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_927386995965160381[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_927386995965160381[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_927386995965160381[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_927386995965160381[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_927386995965160381[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_927386995965160381[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_927386995965160381[56] = 0;
   out_927386995965160381[57] = 0;
   out_927386995965160381[58] = 0;
   out_927386995965160381[59] = 0;
   out_927386995965160381[60] = 0;
   out_927386995965160381[61] = 0;
   out_927386995965160381[62] = 0;
   out_927386995965160381[63] = 0;
   out_927386995965160381[64] = 0;
   out_927386995965160381[65] = 0;
   out_927386995965160381[66] = 0;
   out_927386995965160381[67] = 0;
   out_927386995965160381[68] = 0;
}
void h_14(double *state, double *unused, double *out_1444913281554593646) {
   out_1444913281554593646[0] = state[10];
   out_1444913281554593646[1] = state[11];
   out_1444913281554593646[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2419835801272887251) {
   out_2419835801272887251[0] = 0;
   out_2419835801272887251[1] = 0;
   out_2419835801272887251[2] = 0;
   out_2419835801272887251[3] = 0;
   out_2419835801272887251[4] = 0;
   out_2419835801272887251[5] = 0;
   out_2419835801272887251[6] = 0;
   out_2419835801272887251[7] = 0;
   out_2419835801272887251[8] = 0;
   out_2419835801272887251[9] = 0;
   out_2419835801272887251[10] = 1;
   out_2419835801272887251[11] = 0;
   out_2419835801272887251[12] = 0;
   out_2419835801272887251[13] = 0;
   out_2419835801272887251[14] = 0;
   out_2419835801272887251[15] = 0;
   out_2419835801272887251[16] = 0;
   out_2419835801272887251[17] = 0;
   out_2419835801272887251[18] = 0;
   out_2419835801272887251[19] = 0;
   out_2419835801272887251[20] = 0;
   out_2419835801272887251[21] = 0;
   out_2419835801272887251[22] = 0;
   out_2419835801272887251[23] = 0;
   out_2419835801272887251[24] = 0;
   out_2419835801272887251[25] = 0;
   out_2419835801272887251[26] = 0;
   out_2419835801272887251[27] = 0;
   out_2419835801272887251[28] = 0;
   out_2419835801272887251[29] = 0;
   out_2419835801272887251[30] = 0;
   out_2419835801272887251[31] = 0;
   out_2419835801272887251[32] = 0;
   out_2419835801272887251[33] = 0;
   out_2419835801272887251[34] = 1;
   out_2419835801272887251[35] = 0;
   out_2419835801272887251[36] = 0;
   out_2419835801272887251[37] = 0;
   out_2419835801272887251[38] = 0;
   out_2419835801272887251[39] = 0;
   out_2419835801272887251[40] = 0;
   out_2419835801272887251[41] = 0;
   out_2419835801272887251[42] = 0;
   out_2419835801272887251[43] = 0;
   out_2419835801272887251[44] = 0;
   out_2419835801272887251[45] = 0;
   out_2419835801272887251[46] = 0;
   out_2419835801272887251[47] = 0;
   out_2419835801272887251[48] = 0;
   out_2419835801272887251[49] = 0;
   out_2419835801272887251[50] = 0;
   out_2419835801272887251[51] = 0;
   out_2419835801272887251[52] = 0;
   out_2419835801272887251[53] = 0;
   out_2419835801272887251[54] = 0;
   out_2419835801272887251[55] = 0;
   out_2419835801272887251[56] = 0;
   out_2419835801272887251[57] = 0;
   out_2419835801272887251[58] = 1;
   out_2419835801272887251[59] = 0;
   out_2419835801272887251[60] = 0;
   out_2419835801272887251[61] = 0;
   out_2419835801272887251[62] = 0;
   out_2419835801272887251[63] = 0;
   out_2419835801272887251[64] = 0;
   out_2419835801272887251[65] = 0;
   out_2419835801272887251[66] = 0;
   out_2419835801272887251[67] = 0;
   out_2419835801272887251[68] = 0;
}
void h_19(double *state, double *unused, double *out_5312116878356367122) {
   out_5312116878356367122[0] = state[20];
   out_5312116878356367122[1] = state[21];
   out_5312116878356367122[2] = state[22];
}
void H_19(double *state, double *unused, double *out_6852515652375318432) {
   out_6852515652375318432[0] = 0;
   out_6852515652375318432[1] = 0;
   out_6852515652375318432[2] = 0;
   out_6852515652375318432[3] = 0;
   out_6852515652375318432[4] = 0;
   out_6852515652375318432[5] = 0;
   out_6852515652375318432[6] = 0;
   out_6852515652375318432[7] = 0;
   out_6852515652375318432[8] = 0;
   out_6852515652375318432[9] = 0;
   out_6852515652375318432[10] = 0;
   out_6852515652375318432[11] = 0;
   out_6852515652375318432[12] = 0;
   out_6852515652375318432[13] = 0;
   out_6852515652375318432[14] = 0;
   out_6852515652375318432[15] = 0;
   out_6852515652375318432[16] = 0;
   out_6852515652375318432[17] = 0;
   out_6852515652375318432[18] = 0;
   out_6852515652375318432[19] = 0;
   out_6852515652375318432[20] = 1;
   out_6852515652375318432[21] = 0;
   out_6852515652375318432[22] = 0;
   out_6852515652375318432[23] = 0;
   out_6852515652375318432[24] = 0;
   out_6852515652375318432[25] = 0;
   out_6852515652375318432[26] = 0;
   out_6852515652375318432[27] = 0;
   out_6852515652375318432[28] = 0;
   out_6852515652375318432[29] = 0;
   out_6852515652375318432[30] = 0;
   out_6852515652375318432[31] = 0;
   out_6852515652375318432[32] = 0;
   out_6852515652375318432[33] = 0;
   out_6852515652375318432[34] = 0;
   out_6852515652375318432[35] = 0;
   out_6852515652375318432[36] = 0;
   out_6852515652375318432[37] = 0;
   out_6852515652375318432[38] = 0;
   out_6852515652375318432[39] = 0;
   out_6852515652375318432[40] = 0;
   out_6852515652375318432[41] = 0;
   out_6852515652375318432[42] = 0;
   out_6852515652375318432[43] = 0;
   out_6852515652375318432[44] = 1;
   out_6852515652375318432[45] = 0;
   out_6852515652375318432[46] = 0;
   out_6852515652375318432[47] = 0;
   out_6852515652375318432[48] = 0;
   out_6852515652375318432[49] = 0;
   out_6852515652375318432[50] = 0;
   out_6852515652375318432[51] = 0;
   out_6852515652375318432[52] = 0;
   out_6852515652375318432[53] = 0;
   out_6852515652375318432[54] = 0;
   out_6852515652375318432[55] = 0;
   out_6852515652375318432[56] = 0;
   out_6852515652375318432[57] = 0;
   out_6852515652375318432[58] = 0;
   out_6852515652375318432[59] = 0;
   out_6852515652375318432[60] = 0;
   out_6852515652375318432[61] = 0;
   out_6852515652375318432[62] = 0;
   out_6852515652375318432[63] = 0;
   out_6852515652375318432[64] = 0;
   out_6852515652375318432[65] = 0;
   out_6852515652375318432[66] = 0;
   out_6852515652375318432[67] = 0;
   out_6852515652375318432[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_6794182699788045524) {
  H(in_vec, out_6794182699788045524);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2083680679542908203) {
  err_fun(nom_x, delta_x, out_2083680679542908203);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3694715790776780070) {
  inv_err_fun(nom_x, true_x, out_3694715790776780070);
}
void live_H_mod_fun(double *state, double *out_8113539636200269585) {
  H_mod_fun(state, out_8113539636200269585);
}
void live_f_fun(double *state, double dt, double *out_7865903952507096390) {
  f_fun(state,  dt, out_7865903952507096390);
}
void live_F_fun(double *state, double dt, double *out_3120221082551971936) {
  F_fun(state,  dt, out_3120221082551971936);
}
void live_h_3(double *state, double *unused, double *out_2945031730277704093) {
  h_3(state, unused, out_2945031730277704093);
}
void live_H_3(double *state, double *unused, double *out_6444261605705101960) {
  H_3(state, unused, out_6444261605705101960);
}
void live_h_4(double *state, double *unused, double *out_1738158655202000054) {
  h_4(state, unused, out_1738158655202000054);
}
void live_H_4(double *state, double *unused, double *out_6948699031232825544) {
  H_4(state, unused, out_6948699031232825544);
}
void live_h_9(double *state, double *unused, double *out_1444913281554593646) {
  h_9(state, unused, out_1444913281554593646);
}
void live_H_9(double *state, double *unused, double *out_2419835801272887251) {
  H_9(state, unused, out_2419835801272887251);
}
void live_h_10(double *state, double *unused, double *out_8315307708455960571) {
  h_10(state, unused, out_8315307708455960571);
}
void live_H_10(double *state, double *unused, double *out_6305239117786072402) {
  H_10(state, unused, out_6305239117786072402);
}
void live_h_12(double *state, double *unused, double *out_708046058748378235) {
  h_12(state, unused, out_708046058748378235);
}
void live_H_12(double *state, double *unused, double *out_4842143519493615975) {
  H_12(state, unused, out_4842143519493615975);
}
void live_h_31(double *state, double *unused, double *out_2638610533163085972) {
  h_31(state, unused, out_2638610533163085972);
}
void live_H_31(double *state, double *unused, double *out_7517233294637035796) {
  H_31(state, unused, out_7517233294637035796);
}
void live_h_32(double *state, double *unused, double *out_6513328226278578461) {
  h_32(state, unused, out_6513328226278578461);
}
void live_H_32(double *state, double *unused, double *out_8979009057424764173) {
  H_32(state, unused, out_8979009057424764173);
}
void live_h_13(double *state, double *unused, double *out_6044833227898883470) {
  h_13(state, unused, out_6044833227898883470);
}
void live_H_13(double *state, double *unused, double *out_927386995965160381) {
  H_13(state, unused, out_927386995965160381);
}
void live_h_14(double *state, double *unused, double *out_1444913281554593646) {
  h_14(state, unused, out_1444913281554593646);
}
void live_H_14(double *state, double *unused, double *out_2419835801272887251) {
  H_14(state, unused, out_2419835801272887251);
}
void live_h_19(double *state, double *unused, double *out_5312116878356367122) {
  h_19(state, unused, out_5312116878356367122);
}
void live_H_19(double *state, double *unused, double *out_6852515652375318432) {
  H_19(state, unused, out_6852515652375318432);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
